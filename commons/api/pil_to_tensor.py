# AUTOGENERATED! DO NOT EDIT! File to edit: ../../shardul/api_notebooks/pil_to_tensor.ipynb.

# %% auto 0
__all__ = ['pil_to_tensor']

# %% ../../shardul/api_notebooks/pil_to_tensor.ipynb 1
import os
from torchvision import transforms

# %% ../../shardul/api_notebooks/pil_to_tensor.ipynb 2
def pil_to_tensor(image, resize_size=(224, 224), normalize=True):
    """
    Transform a PIL image into a tensor with optional resizing and normalization.

    Args:
        image (PIL.Image.Image): The input PIL image to be transformed.
        resize_size (tuple): The target size for resizing the image. Default is (224, 224).
        normalize (bool): Whether to normalize the tensor. Default is True.

    Returns:
        torch.Tensor: The transformed image as a tensor.

    Usage:
    - Call this function to convert a PIL image into a tensor, optionally resizing and normalizing it.
    - By default, the function resizes the image to (224, 224) and applies mean and standard deviation normalization.
    """
    # Define the transformation pipeline
    transform = transforms.Compose([
        transforms.Resize(resize_size),
        transforms.ToTensor(),
    ])
    
    if normalize:
        transform = transforms.Compose([
            transform,
            transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
        ])
    
    # Apply the transformation to the input image
    tensor_image = transform(image)
    
    return tensor_image

