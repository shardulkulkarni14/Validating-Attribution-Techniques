# AUTOGENERATED! DO NOT EDIT! File to edit: preprocess.ipynb.

# %% auto 0
__all__ = ['img_to_tensor']

# %% preprocess.ipynb 1
import torch
from torchvision import transforms
from PIL import Image

# %% preprocess.ipynb 2
# def img_to_tensor(img_path):

def img_to_tensor(img_arr):
#     image = Image.open(img_path)
#     size = (300, 300)
#     print(type(image))
#     image = image.resize(size)
    
    #mean and std from ImageNet
    normalize = transforms.Normalize(
        mean=[0.485, 0.456, 0.406],
        std=[0.229, 0.224, 0.225]
        )
    preprocess = transforms.Compose([
        transforms.ToTensor(),
        normalize
        ])
    tensor = preprocess(img_arr)
    # reshape 4D tensor (N, C, H, W)
    tensor = tensor.unsqueeze(0)
    return tensor
